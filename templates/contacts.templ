package templates

import (
  "fmt"

  "github.com/kylehuntsman/hypermedia-systems/contact"
)

templ Contacts(contacts []*contact.Contact, searchQuery string) {
  <form action="/contacts" method="get">
    <label for="search">Search Term</label>
    <input id="search" type="search" name="q" 
      if searchQuery != "" {
        value={ searchQuery }
      }
    />
    <input type="submit" value="Search"/>
  </form>

  <table>
    <thead>
      <tr>
        <th>First</th> <th>Last</th> <th>Phone</th> <th>Email</th> <th></th>
      </tr>
    </thead>
    <tbody>
      for _, contact := range contacts {
        <tr>
          <td>{ contact.FirstName }</td>
          <td>{ contact.LastName }</td>
          <td>{ contact.Phone }</td>
          <td>{ contact.Email }</td>
          <td><a href={ templ.URL(fmt.Sprintf("/contacts/%s/edit", contact.Id)) }>Edit</a>
              <a href={ templ.URL(fmt.Sprintf("/contacts/%s", contact.Id)) }>View</a></td>
        </tr>
      }
    </tbody>
  </table>

  <p>
    <a href="/contacts/new">Add Contact</a>
  </p>
}

templ NewContact(contact *contact.Contact) {
  <form action="/contacts/new" method="post">
    <fieldset>
      <legend>Contact Values</legend>
      <p>
        <label for="first_name">First Name</label>
        <input id="first_name" type="text" name="first_name" placeholder="First Name"
          if contact.FirstName != "" {
            value={ contact.FirstName }
          }
        />
        <span class="error">{ contact.Errors["FirstName"] }</span>
      </p>
      <p>
        <label for="last_name">Last Name</label>
        <input id="last_name" type="text" name="last_name" placeholder="Last Name"
          if contact.LastName != "" {
            value={ contact.LastName }
          }
        />
        <span class="error">{ contact.Errors["LastName"] }</span>
      </p>
      <p>
        <label for="email">Email</label>
        <input id="email" type="email" name="email" placeholder="Email"
          if contact.Email != "" {
            value={ contact.Email }
          }
        />
        <span class="error">{ contact.Errors["Email"] }</span>
      </p>
      <p>
        <label for="phone">Phone</label>
        <input id="phone" type="tel" name="phone" placeholder="Phone"
          if contact.Phone != "" {
            value={ contact.Phone }
          }
        />
        <span class="error">{ contact.Errors["Phone"] }</span>
      </p>
      <button>Save</button>
    </fieldset>
  </form>

  <p>
    <a href="/contacts">Back to Contacts</a>
  </p>
}

templ ViewContact(contact *contact.Contact) {
  <h1>{ contact.FirstName } { contact.LastName }</h1>

  <div>
    <div>Phone: { contact.Phone }</div>
    <div>Email: { contact.Email }</div>
  </div>

  <p>
    <a href={ templ.URL(fmt.Sprintf("/contacts/%s/edit", contact.Id)) }>Edit</a>
    <a href="/contacts">Back</a>
  </p>
}

templ EditContact(contact *contact.Contact) {
  <form action={ fmt.Sprintf("/contacts/%s/edit", contact.Id) } method="post">
    <fieldset>
      <legend>Contact Values</legend>
        <p>
        <label for="first_name">First Name</label>
        <input id="first_name" type="text" name="first_name" placeholder="First Name"
          if contact.FirstName != "" {
            value={ contact.FirstName }
          }
        />
        <span class="error">{ contact.Errors["FirstName"] }</span>
      </p>
      <p>
        <label for="last_name">Last Name</label>
        <input id="last_name" type="text" name="last_name" placeholder="Last Name"
          if contact.LastName != "" {
            value={ contact.LastName }
          }
        />
        <span class="error">{ contact.Errors["LastName"] }</span>
      </p>
      <p>
        <label for="email">Email</label>
        <input id="email" type="email" name="email" placeholder="Email"
          if contact.Email != "" {
            value={ contact.Email }
          }
        />
        <span class="error">{ contact.Errors["Email"] }</span>
      </p>
      <p>
        <label for="phone">Phone</label>
        <input id="phone" type="tel" name="phone" placeholder="Phone"
          if contact.Phone != "" {
            value={ contact.Phone }
          }
        />
        <span class="error">{ contact.Errors["Phone"] }</span>
      </p>
      <button>Save</button>
    </fieldset>
  </form>

  <form action={ fmt.Sprintf("/contacts/%s/delete", contact.Id) } method="post">
    <button>Delete Contact</button>
  </form>

  <p>
    <a href="/contacts/">Back to Contacts</a>
  </p>
}